#!/bin/bash

set -e
shopt -s extglob

MYSQL_USER_PASSWORD="$(</dev/urandom tr -dc '[:alnum:]' | head -c32)"
MYSQL_ROOT_PASSWORD="$(</dev/urandom tr -dc '[:alnum:]' | head -c32)"

ln -sfv "/usr/share/zoneinfo/$TZ" /etc/localtime

yum -y install epel-release
yum -y update
yum -y install bash-completion bind-utils iproute less mariadb-server net-tools python2-pip

pip install pyping

yum -y --setopt=tsflags="" install \
    "https://github.com/kuuhaku86/powergslb/releases/download/$VERSION/powergslb-$VERSION-1.el7.noarch.rpm" \
    "https://github.com/kuuhaku86/powergslb/releases/download/$VERSION/powergslb-admin-$VERSION-1.el7.noarch.rpm" \
    "https://github.com/kuuhaku86/powergslb/releases/download/$VERSION/powergslb-pdns-$VERSION-1.el7.noarch.rpm"

sed -i "s/^password = .*/password = $MYSQL_USER_PASSWORD/g" /etc/powergslb/powergslb.conf

cp -v /etc/pdns/pdns.conf /etc/pdns/pdns.conf~
cp -v "/usr/share/doc/powergslb-pdns-$VERSION/pdns/pdns.conf" /etc/pdns/pdns.conf

sed -i '/\[mysqld\]/a bind-address=127.0.0.1\ncharacter_set_server=utf8' /etc/my.cnf.d/server.cnf

su -s /bin/bash mysql /usr/libexec/mariadb-prepare-db-dir

mysqld_safe --basedir=/usr &
/usr/libexec/mariadb-wait-ready $$

mysql << EOF
CREATE DATABASE powergslb;
GRANT ALL ON powergslb.* TO powergslb@localhost IDENTIFIED BY '$MYSQL_USER_PASSWORD';
USE powergslb;
source /usr/share/doc/powergslb-$VERSION/database/scheme.sql
source /usr/share/doc/powergslb-$VERSION/database/data.sql
EOF

mysqladmin -u root password "$MYSQL_ROOT_PASSWORD"

cat << EOF > /root/.my.cnf
[client]
user=root
password=$MYSQL_ROOT_PASSWORD
EOF

echo -e '#!/bin/bash\n\nexit 0' > /etc/powergslb/powergslb-check

chmod 777 /etc/powergslb/powergslb-check

echo -e '#!/usr/bin/env python2.7\n' > /etc/powergslb/load-balancing-check
cat << EOF >> /etc/powergslb/load-balancing-check

import socket
import sys
import mysql.connector
import logging

ADDRESS = str(sys.argv[1])
PORT = int(sys.argv[2])
DB_ADDRESS = "127.0.0.1"
DB_PORT = 3306

operation = """
    UPDATE records
    SET weight = %s
    WHERE records.content_monitor_id = (
        SELECT contents_monitors.id 
        FROM contents_monitors
        JOIN monitors ON contents_monitors.monitor_id = monitors.id
        JOIN contents ON contents_monitors.content_id = contents.id
        WHERE monitors.monitor = "Load Balancing Check"
        AND contents.content = %s
        LIMIT 1
    )
"""

try: 
    logging.basicConfig(filename='/var/log/load-balancing.log', filemode='a', format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    sock.connect((ADDRESS, PORT))

    data = sock.recv(1024)
    data = data.decode('UTF-8')
    data = int(float(data))

    connection = mysql.connector.connect(
        host=DB_ADDRESS,
        port=DB_PORT,
        user="powergslb",
        database="powergslb",
        password="your-database-password-here")

    cursor = connection.cursor()

    cursor.execute(operation, (data, ADDRESS, ))

    connection.commit()

    cursor.close()
except Exception:
    logging.exception("message")
EOF

sed -i "s/your-database-password-here/$MYSQL_USER_PASSWORD/g" /etc/powergslb/load-balancing-check

chmod 777 /etc/powergslb/load-balancing-check

pkill -f /usr/libexec/mysqld

rm -frv /etc/systemd/system/*.wants /usr/lib/systemd/system/*.wants/*
ln -rsvt /usr/lib/systemd/system/sockets.target.wants /usr/lib/systemd/system/dbus.socket
ln -rsvt /usr/lib/systemd/system/sockets.target.wants /usr/lib/systemd/system/systemd-journald.socket
ln -rsvt /usr/lib/systemd/system/sockets.target.wants /usr/lib/systemd/system/systemd-shutdownd.socket
ln -rsvt /usr/lib/systemd/system/sysinit.target.wants /usr/lib/systemd/system/systemd-tmpfiles-setup.service
ln -rsvt /usr/lib/systemd/system/timers.target.wants /usr/lib/systemd/system/systemd-tmpfiles-clean.timer

systemctl enable mariadb pdns powergslb

yum clean all
rm -frv /anaconda-post.log /root/anaconda-ks.cfg /tmp/* /var/cache/yum /var/log/!(mariadb) /var/tmp/*
find /etc -name "*-" -o -name "*.bak" -o -name "*.rpmnew" -o -name "*.rpmsave" | xargs rm -fv

rm -fv "$0"
